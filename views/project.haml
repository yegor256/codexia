-# SPDX-FileCopyrightText: Copyright (c) 2020-2025 Yegor Bugayenko
-# SPDX-License-Identifier: MIT

%div{style: 'float:right; text-align: right; max-width: 8em; background-color: #eee; border-radius: 10px; border: 1px solid lightgray; padding: 1em;'}
  - level = project.badges.level
  %strong.monospace{style: 'font-size: 3em;'}
    = "L#{level}"
  %div.smaller{style: 'line-height: 1.2em;'}
    - if level == 0
      The project is a total stranger
    - if level == 1
      We are keeping an eye on this project
    - if level == 2
      We believe in this project and donate regularly
    - if level == 3
      We invest into this project

%p
  %span.monospace
    %a{href: "https://github.com/#{project.coordinates}"}<
      &= project.coordinates
    %a{href: "https://github.com/#{project.coordinates}"}<
      %img{src: iri.cut('/github-logo.svg'), style: 'vertical-align: middle; width: 1em;'}
  %br
  %span.gray.smaller
    = partial(:author, locals, a: project.submitter)
    %span.item{title: "##{project.id} on #{project.created}"}
      = RelativeTime.in_words(project.created)
    - if Xia::Rank.new(the_author).ok?('projects.delete')
      %span.item
        %a{href: iri.cut('/p').append(project.id).append('delete'), onclick: 'return confirm("Are you sure?");'}<
          = '/delete'

- if !project.deleter.nil?
  %p
    %strong.firebrick
      Deleted by
      = partial(:author, locals, a: project.deleter)

%p
  - project.badges.to_a.each do |b|
    - next if /^newbie|L[123]$/.match?(b.text)
    = partial(:badge, locals, text: b.text)
    - if Xia::Rank.new(the_author).ok?('badges.detach')
      %a.tomato{href: iri.cut('/p').append(project.id).append('detach').append(b.id), onclick: 'return confirm("Are you sure?");'}<
        = 'âœ˜'

- if Xia::Rank.new(the_author).ok?('badges.attach')
  - if project.deleter.nil?
    %form{action: iri.cut('/p').append(project.id).append('attach'), method: 'POST'}
      %input{type: 'text', name: 'text', size: 25, placeholder: 'attach a new badge...', autocomplete: 'off'}
      %button{type: 'submit'} Attach

- reviews.each do |r|
  %div.block{style: 'border-left: 2px solid lightgray; padding-left: 1em;'}
    %p{style: 'margin-bottom: 1em; clear: both;'}
      - if r.deleter
        %strong.firebrick
          Deleted by
          = partial(:author, locals, a: r.deleter)
        %br
      %span.smaller.gray
        = partial(:author, locals, a: r.submitter)
        %span.item{title: "##{r.id} on #{r.created}", style: (r.deleter ? 'text-decoration:line-through' : '')}
          = RelativeTime.in_words(r.created)
        %span.item
          = r.up
          - if Xia::Rank.new(the_author).ok?('reviews.upvote')
            %a{href: iri.cut('/p').append(project.id).append('r').append(r.id).append('up')}<
              = '/up'
          - else
            = 'ups'
        %span.item
          = r.down
          - if Xia::Rank.new(the_author).ok?('reviews.downvote')
            %a{href: iri.cut('/p').append(project.id).append('r').append(r.id).append('down')}<
              = '/down'
          - else
            = 'downs'
        - if Xia::Rank.new(the_author).ok?('reviews.delete')
          %span.item
            %a{href: iri.cut('/p').append(project.id).append('r').append(r.id).append('delete'), onclick: 'return confirm("Are you sure?");'}<
              = '/delete'
    = r.html

= partial(:paging, locals, page: page, list: reviews)

- if Xia::Rank.new(the_author).ok?('reviews.post')
  - if project.deleter.nil?
    %div.block
      %form{action: iri.cut('/p').append(project.id).append('post'), method: 'POST'}
        %fieldset
          %label
            What do you think about it
            (in
            = succeed ',' do
              %a{href: 'https://daringfireball.net/projects/markdown/syntax'} Markdown
            please)?
          %textarea{name: 'text', style: 'width: 100%; height: 8em;', readonly: the_author.karma.points.negative?}
          %span
            %button{type: 'submit'} Post
            %label
              = succeed ':' do
                %strong.firebrick ATTENTION
              Read our
              %a{href: iri.cut('/terms')}
                terms of use
              and don't abuse the platform.

- if project.deleter.nil? && Xia::Bots.new.is?(the_author)
  %div.block
    - metas = project.meta.to_a
    - unless metas.empty?
      %table
        %thead
          %tr
            %th Key
            %th Value
        %tbody
          - metas.each do |m|
            %tr
              %td
                %code
                  &= m[:key]
              %td.monospace
                &= m[:value]
    %form{action: iri.cut('/p').append(project.id).append('meta'), method: 'POST'}
      %label Meta:
      %input{type: 'text', name: 'key', size: 15, placeholder: 'key', autocomplete: 'off'}
      %input{type: 'text', name: 'value', size: 25, placeholder: 'value', autocomplete: 'off'}
      %button{type: 'submit'} Set
